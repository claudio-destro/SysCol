import {parseCommandResponse} from "../../script/protocol/parseCommandResponse";
import {isTestFailed} from "../../script/protocol/getTestResult";

describe("Tests failed", () => {
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.1.13:FAIL}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.1.13:FAIL}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.1.15:FAIL}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.1.15:FAIL}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.3.1:FAIL 0A:0516d +A:0480d -A:0000d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.3.4:FAIL 0A:0516d +A:0401d -A:0000d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.3.4:FAIL 0A:0517d +A:0401d -A:0000d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.3.4:FAIL 0A:0516d +A:0401d -A:0000d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.3.4:FAIL 0A:0516d +A:0401d -A:0631d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.3.10:FAIL 0V:0515d +V:0158d -V:0000d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.3.10:FAIL 0V:0516d +V:0157d -V:0518d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.3.10:FAIL 0V:0516d +V:0156d -V:0518d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,7.3.14:FAIL 0V:0516d +V:0158d -V:0877d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,8.5.1:FAIL}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,8.5.2:FAIL}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,8.5.2:FAIL}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,8.5.3:FAIL}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,8.5.3:FAIL}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,9.0.4:FAIL Vint:0943d}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,9.1.2:FAIL +15V :00.01V}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,9.1.9:FAIL +15VG:17.58V}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,9.1.10:FAIL +15VG:17.57V}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,9.1.11:FAIL -15V :17.26V}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,9.1.12:FAIL -15V :17.25V}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,9.1.13:FAIL -15V :17.25V}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,9.1.14:FAIL -15V :17.24V}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,9.1.15:FAIL -15V :00.01V}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,a.0.9:FAIL FRQ:000000Hz TON:0000.00us}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,a.0.11:FAIL FRQ:000000Hz TON:0000.00us}\n").argv)).toBeTruthy());
  test('"TST" should fail', () => expect(isTestFailed(parseCommandResponse("{SC,TST,a.0.12:FAIL FRQ:000000Hz TON:0000.00us}\n").argv)).toBeTruthy());
});
